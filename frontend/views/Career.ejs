<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HIT EduGuide - Career Prospects</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #0c3483 0%, #6499ff 100%);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            overflow-x: hidden;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem 2rem;
            background-color: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            position: sticky;
            top: 0;
            z-index: 10;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
        }

        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: white;
            text-decoration: none;
            display: flex;
            align-items: center;
        }

        .logo-icon {
            margin-right: 10px;
            animation: spin 10s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .nav-links {
            display: flex;
            gap: 1.5rem;
        }

        .nav-btn {
            color: white;
            text-decoration: none;
            padding: 0.5rem 1.2rem;
            border-radius: 50px;
            font-weight: 500;
            transition: all 0.3s ease;
            background: transparent;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .nav-btn:hover {
            background-color: rgba(255, 255, 255, 0.2);
            transform: translateY(-3px);
        }

        .container {
            display: flex;
            flex: 1;
            position: relative;
            z-index: 1;
        }

        .sidebar {
            width: 280px;
            background-color: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 2rem;
            border-right: 1px solid rgba(255, 255, 255, 0.2);
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .profile-section {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 2rem;
            width: 100%;
        }

        .profile-img {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background-color: #1a56ff;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .profile-name {
            font-size: 1.3rem;
            font-weight: 600;
            color: white;
            margin-bottom: 0.3rem;
            text-align: center;
        }

        .profile-location {
            font-size: 0.9rem;
            color: rgba(255, 255, 255, 0.7);
            margin-bottom: 1.5rem;
        }

        .menu-links {
            width: 100%;
            display: flex;
            flex-direction: column;
            gap: 0.8rem;
        }

        .menu-link {
            padding: 0.8rem 1.2rem;
            border-radius: 10px;
            color: white;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .menu-link:hover {
            background-color: rgba(255, 255, 255, 0.15);
        }

        .menu-link.active {
            background-color: rgba(255, 255, 255, 0.2);
        }

        .menu-icon {
            opacity: 0.8;
        }

        .main-content {
            flex: 1;
            padding: 2rem;
            overflow-y: auto;
        }

        .page-title {
            font-size: 2.2rem;
            font-weight: 700;
            color: white;
            margin-bottom: 1.5rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid rgba(255, 255, 255, 0.2);
            opacity: 0;
            transform: translateY(20px);
            animation: fadeIn 0.8s forwards 0.2s;
        }

        @keyframes fadeIn {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .tabs {
            display: flex;
            margin-bottom: 1.5rem;
            gap: 1rem;
        }

        .tab {
            padding: 0.8rem 1.5rem;
            border-radius: 10px;
            color: white;
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            opacity: 0;
            transform: translateY(20px);
            animation: fadeIn 0.8s forwards 0.4s;
        }

        .tab:nth-child(2) {
            animation-delay: 0.6s;
        }

        .tab.active {
            background-color: #1a56ff;
            border-color: #1a56ff;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .tab:hover:not(.active) {
            background-color: rgba(255, 255, 255, 0.2);
        }

        .program-search {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            animation: fadeIn 0.8s forwards 0.8s;
        }

        .program-input {
            flex: 1;
            padding: 1rem;
            border-radius: 10px;
            border: 1px solid rgba(255, 255, 255, 0.3);
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .program-input::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .program-input:focus {
            outline: none;
            border-color: white;
            background-color: rgba(255, 255, 255, 0.15);
        }

        .search-btn {
            padding: 0 1.5rem;
            border-radius: 10px;
            border: none;
            background: linear-gradient(90deg, #2e7bff 0%, #1a56ff 100%);
            color: white;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .search-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        .search-btn:active {
            transform: translateY(-1px);
        }

        .search-btn::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background-color: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: width 0.5s, height 0.5s;
        }

        .search-btn:hover::after {
            width: 300px;
            height: 300px;
        }

        .results-section {
            margin-top: 1rem;
            opacity: 0;
            display: none;
            animation: fadeIn 0.8s forwards;
        }

        .results-section.show {
            display: block;
        }

        .program-card {
            background-color: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
            transform: translateY(20px);
            opacity: 0;
            animation: fadeIn 0.8s forwards;
        }

        .program-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        }

        .program-card:nth-child(2) {
            animation-delay: 0.2s;
        }

        .program-card:nth-child(3) {
            animation-delay: 0.4s;
        }

        .program-card:nth-child(4) {
            animation-delay: 0.6s;
        }

        .program-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: white;
            margin-bottom: 0.8rem;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .program-icon {
            width: 40px;
            height: 40px;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .program-details {
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 1rem;
            line-height: 1.6;
        }

        .career-list {
            margin-top: 1rem;
        }

        .career-item {
            display: flex;
            align-items: center;
            gap: 0.8rem;
            padding: 0.8rem;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            margin-bottom: 0.8rem;
            transition: all 0.3s ease;
        }

        .career-item:hover {
            background-color: rgba(255, 255, 255, 0.15);
        }

        .career-icon {
            width: 30px;
            height: 30px;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }

        .career-info {
            flex: 1;
        }

        .career-title {
            font-weight: 600;
            color: white;
            margin-bottom: 0.3rem;
        }

        .career-desc {
            font-size: 0.9rem;
            color: rgba(255, 255, 255, 0.7);
        }

        .career-salary {
            font-weight: 600;
            color: #4ee0bc;
            margin-left: auto;
            flex-shrink: 0;
        }

        .save-btn {
            padding: 0.6rem 1rem;
            border-radius: 8px;
            background-color: transparent;
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: white;
            font-size: 0.9rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .save-btn:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .favorite {
            color: #ffd60a;
        }

        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 0;
            pointer-events: none;
        }

        .floating-shape {
            position: absolute;
            background-color: rgba(255, 255, 255, 0.05);
            border-radius: 50%;
            animation: float 15s infinite ease-in-out;
        }

        .shape1 {
            width: 400px;
            height: 400px;
            top: 10%;
            right: -100px;
            animation-delay: 0s;
        }

        .shape2 {
            width: 300px;
            height: 300px;
            bottom: -50px;
            left: 30%;
            animation-delay: 2s;
        }

        .shape3 {
            width: 200px;
            height: 200px;
            top: 40%;
            left: 10%;
            animation-delay: 4s;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0) rotate(0deg); }
            50% { transform: translateY(-30px) rotate(5deg); }
        }

        .sparkles {
            position: absolute;
            width: 5px;
            height: 5px;
            border-radius: 50%;
            background-color: white;
            box-shadow: 0 0 10px 2px rgba(255, 255, 255, 0.8);
            animation: sparkle 4s infinite;
        }

        @keyframes sparkle {
            0%, 100% { opacity: 0; }
            50% { opacity: 1; }
        }

        @media (max-width: 992px) {
            .container {
                flex-direction: column;
            }

            .sidebar {
                width: 100%;
                border-right: none;
                border-bottom: 1px solid rgba(255, 255, 255, 0.2);
                padding: 1.5rem;
            }

            .profile-section {
                flex-direction: row;
                gap: 1rem;
                margin-bottom: 1rem;
            }

            .profile-img {
                width: 80px;
                height: 80px;
                font-size: 2rem;
                margin-bottom: 0;
            }

            .profile-info {
                text-align: left;
            }

            .menu-links {
                flex-direction: row;
                flex-wrap: wrap;
                gap: 0.5rem;
            }

            .menu-link {
                padding: 0.6rem 1rem;
            }
        }

        @media (max-width: 576px) {
            .header {
                padding: 1rem;
            }

            .logo {
                font-size: 1.5rem;
            }

            .nav-links {
                gap: 0.5rem;
            }

            .nav-btn {
                padding: 0.4rem 0.8rem;
                font-size: 0.9rem;
            }

            .main-content {
                padding: 1rem;
            }

            .page-title {
                font-size: 1.8rem;
            }

            .tabs {
                flex-wrap: wrap;
            }

            .profile-section {
                flex-direction: column;
            }

            .profile-img {
                margin-bottom: 1rem;
            }

            .profile-info {
                text-align: center;
            }
        }
    </style>
</head>
<body>
<div class="particles">
    <div class="floating-shape shape1"></div>
    <div class="floating-shape shape2"></div>
    <div class="floating-shape shape3"></div>
</div>

<header class="header">
    <a href="#" class="logo">
        <svg class="logo-icon" width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 2L2 7l10 5 10-5-10-5z"/>
            <path d="M2 17l10 5 10-5"/>
            <path d="M2 12l10 5 10-5"/>
        </svg>
        HIT EduGuide
    </a>

    <div class="nav-links">
        <a href="/dashboard" class="nav-btn">My Dashboard</a>
        <a href="/" class="nav-btn">Logout</a>
    </div>
</header>

<div class="container">
    <div class="sidebar">
        <div class="profile-section">
            <div class="profile-img">EM</div>
            <div class="profile-info">
                <h3 class="profile-name">Ethel Matope</h3>
                <p class="profile-location">Bikita, XX</p>
            </div>
        </div>

        <div class="menu-links">
            <a href="/dash" class="menu-link">
                <svg class="menu-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                    <polyline points="9 22 9 12 15 12 15 22"></polyline>
                </svg>
                Dashboard
            </a>
            <a href="#" class="menu-link active">
                <svg class="menu-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                    <polyline points="14 2 14 8 20 8"></polyline>
                    <line x1="16" y1="13" x2="8" y2="13"></line>
                    <line x1="16" y1="17" x2="8" y2="17"></line>
                    <polyline points="10 9 9 9 8 9"></polyline>
                </svg>
                Programs
            </a>
            <a href="#" class="menu-link">
                <svg class="menu-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10"></circle>
                    <polygon points="16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"></polygon>
                </svg>
                Career Matches
            </a>
            <a href="#" class="menu-link">
                <svg class="menu-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>
                </svg>
                Saved Jobs
            </a>
            <a href="#" class="menu-link">
                <svg class="menu-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                    <circle cx="12" cy="7" r="4"></circle>
                </svg>
                Profile
            </a>
        </div>
    </div>

    <div class="main-content">
        <h1 class="page-title">Career Prospects</h1>

        <div class="tabs">
            <button class="tab active">Career Prospects</button>
            <button class="tab">Favorite Jobs</button>
        </div>

        <div class="program-search">
            <input type="text" class="program-input" id="programInput" placeholder="Enter program name (e.g. Computer Science, Engineering, Business)">
            <button class="search-btn" id="searchBtn">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="11" cy="11" r="8"></circle>
                    <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                </svg>
                Search
            </button>
        </div>

        <div class="results-section" id="resultsSection">
            <div class="program-card">
                <form id="careerForm">
                    <input type="text" class="program-input" id="enterProgram" name="enterProgram" placeholder="Enter Program" required>
                    <button type="submit" class="search-btn">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="11" cy="11" r="8"></circle>
                            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                        </svg>
                        Get Career Prospects
                    </button>
                </form>
                <ul class="career-list" id="careerList"></ul>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const programInput = document.getElementById('programInput');
        const searchBtn = document.getElementById('searchBtn');
        const resultsSection = document.getElementById('resultsSection');
        const careerForm = document.getElementById('careerForm');
        const enterProgram = document.getElementById('enterProgram');
        const careerList = document.getElementById('careerList');

        // Add event listeners
        searchBtn.addEventListener('click', searchProgram);
        programInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                searchProgram();
            }
        });

        careerForm.addEventListener('submit', async function(event) {
            event.preventDefault();
            const programName = enterProgram.value.trim();

            if (!programName) {
                alert('Please enter a program name');
                return;
            }

            // Show loading state
            careerList.innerHTML = `
                <div style="display: flex; justify-content: center; align-items: center; padding: 2rem;">
                    <div style="border: 4px solid rgba(255, 255, 255, 0.3); border-top: 4px solid white;
                        border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite;"></div>
                </div>
            `;

            // Add keyframes for spin animation to document head
            if (!document.getElementById('spin-animation-style')) {
                const style = document.createElement('style');
                style.id = 'spin-animation-style';
                style.innerHTML = `
                @keyframes spin {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                }
            `;
                document.head.appendChild(style);
            }

            try {
                const response = await fetch('/api/careers/getCareer', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ enterProgram: programName })
                });
                const data = await response.json();
                displayResults(programName, data.message);
            } catch (error) {
                console.error('Error fetching career prospects:', error);
                careerList.innerHTML = `
                    <div class="career-item">
                        <div class="career-icon">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <line x1="12" y1="8" x2="12" y2="12"></line>
                                <line x1="12" y1="16" x2="12.01" y2="16"></line>
                            </svg>
                        </div>
                        <div class="career-info">
                            <h4 class="career-title">Error</h4>
                            <p class="career-desc">Could not fetch career information. Please try again later.</p>
                        </div>
                    </div>
                `;
            }
        });

        // Function to search for program careers
        function searchProgram() {
            const programName = programInput.value.trim();

            if (!programName) {
                alert('Please enter a program name');
                return;
            }

            // Show loading state
            resultsSection.innerHTML = `
                <div class="program-card">
                    <div style="display: flex; justify-content: center; align-items: center; padding: 2rem;">
                        <div style="border: 4px solid rgba(255, 255, 255, 0.3); border-top: 4px solid white;
                            border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite;"></div>
                    </div>
                </div>
            `;
            resultsSection.classList.add('show');

            // Fetch data from API
            fetch('/api/careers/getCareer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ enterProgram: programName })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    displayResults(programName, data.message);
                })
                .catch(error => {
                    console.error('Error fetching career data:', error);
                    resultsSection.innerHTML = `
                    <div class="program-card">
                        <h3 class="program-title">
                            <div class="program-icon">
                                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                    stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <line x1="12" y1="8" x2="12" y2="12"></line>
                                    <line x1="12" y1="16" x2="12.01" y2="16"></line>
                                </svg>
                            </div>
                            Error
                        </h3>
                        <p class="program-details">Could not fetch career information. Please try again later.</p>
                    </div>
                `;
                });
        }

        // Function to display the results
        function displayResults(programName, messageData) {
            // Process the HTML content from API
            const parser = new DOMParser();
            const doc = parser.parseFromString('<div>' + messageData + '</div>', 'text/html');
            const liElements = doc.querySelectorAll('li');

            // Extract career titles and descriptions
            const careers = [];
            for (let i = 1; i < liElements.length - 1; i++) { // Skip first and last items
                const text = liElements[i].textContent.trim();
                if (text.includes('**')) {
                    const parts = text.split('**');
                    const roleNumber = parts[0].trim();
                    const roleTitle = parts[1].split(':')[0].trim();
                    const roleDesc = parts[1].split(':')[1] ? parts[1].split(':')[1].trim() : '';

                    careers.push({
                        title: roleTitle,
                        description: roleDesc,
                        number: roleNumber
                    });
                }
            }

            // Generate HTML for results
            let resultsHTML = `
                <div class="program-card">
                    <h3 class="program-title">
                        <div class="program-icon">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>
                            </svg>
                        </div>
                        ${programName}
                    </h3>
                    <p class="program-details">Here are potential career paths for ${programName} graduates:</p>
                    <div class="career-list">
            `;

            // Add career items
            careers.forEach((career, index) => {
                // Generate a random salary range for demonstration
                const minSalary = Math.floor(Math.random() * 40 + 40); // $40K-$80K
                const maxSalary = minSalary + Math.floor(Math.random() * 40 + 20); // $20K-$60K more

                // Select an icon based on the career type
                let icon = '';
                if (career.title.toLowerCase().includes('developer') || career.title.toLowerCase().includes('engineer')) {
                    icon = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 18l6-6-6-6M8 6l-6 6 6 6"/></svg>';
                } else if (career.title.toLowerCase().includes('analyst') || career.title.toLowerCase().includes('scientist')) {
                    icon = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M23 6l-9.5 9.5-5-5L1 18"/><path d="M17 6h6v6"/></svg>';
                } else if (career.title.toLowerCase().includes('manager') || career.title.toLowerCase().includes('admin')) {
                    icon = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"/><circle cx="9" cy="7" r="4"/><path d="M23 21v-2a4 4 0 0 0-3-3.87"/><path d="M16 3.13a4 4 0 0 1 0 7.75"/></svg>';
                } else {
                    icon = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><path d="M12 16v-4"/><path d="M12 8h.01"/></svg>';
                }

                resultsHTML += `
                    <div class="career-item">
                        <div class="career-icon">
                            ${icon}
                        </div>
                        <div class="career-info">
                            <h4 class="career-title">${career.title}</h4>
                            <p class="career-desc">${career.description}</p>
                        </div>
                        <div class="career-salary">$${minSalary}K-$${maxSalary}K</div>
                    </div>
                `;
            });

            resultsHTML += `
                    </div>
                    <button class="save-btn">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                            stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>
                        </svg>
                        Save Program
                    </button>
                </div>
            `;

            // Update the results section
            resultsSection.innerHTML = resultsHTML;
            resultsSection.classList.add('show');

            // Update the career list for the form
            careerList.innerHTML = resultsHTML;

            // Add event listener for the save button
            const saveBtn = resultsSection.querySelector('.save-btn');
            if (saveBtn) {
                saveBtn.addEventListener('click', function() {
                    const svg = this.querySelector('svg');
                    svg.style.fill = this.classList.contains('favorite') ? 'none' : 'currentColor';
                    this.classList.toggle('favorite');
                    this.textContent = this.classList.contains('favorite') ? ' Program Saved' : ' Save Program';
                    this.prepend(svg);
                });
            }
        }
    });
</script>
</body>
</html>